name: Lighthouse Performance Audit

on:
  issue_comment:
    types: [created]

jobs:
  lighthouse-audit:
    # Only run on PR comments that contain the trigger phrase
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'RUN_COMMIT_CRAB')
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: React to trigger comment
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm install -g lighthouse

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v2
        with:
          chrome-version: stable
          install-dependencies: true

      - name: Extract URL from comment
        id: extract-url
        uses: actions/github-script@v8
        with:
          script: |
            const comment = context.payload.comment.body;
            
            // Extract URL from comment (look for URLs after RUN_COMMIT_CRAB)
            const urlMatch = comment.match(/RUN_COMMIT_CRAB\s+(https?:\/\/[^\s]+)/i);
            let targetUrl = 'https://www.browserstack.com/users/sign_in'; // default
            
            if (urlMatch && urlMatch[1]) {
              targetUrl = urlMatch[1];
            }
            
            core.setOutput('url', targetUrl);
            console.log('Target URL:', targetUrl);

      - name: Run Lighthouse Audit
        id: lighthouse
        run: |
          TARGET_URL="${{ steps.extract-url.outputs.url }}"
          echo "Running Lighthouse audit on: $TARGET_URL"
          
          # Run lighthouse and capture the output
          lighthouse_output=$(lighthouse "$TARGET_URL" \
            --output=json \
            --quiet \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage" 2>/dev/null | jq '{
              FCP: .audits["first-contentful-paint"].displayValue,
              LCP: .audits["largest-contentful-paint"].displayValue,
              CLS: .audits["cumulative-layout-shift"].displayValue,
              TBT: .audits["total-blocking-time"].displayValue,
              TTI: .audits["interactive"].displayValue,
              Performance: .categories.performance.score
            }')
          
          echo "lighthouse_results<<EOF" >> $GITHUB_OUTPUT
          echo "$lighthouse_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "target_url<<EOF" >> $GITHUB_OUTPUT
          echo "$TARGET_URL" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Also save to a file for debugging
          echo "$lighthouse_output" > lighthouse-results.json
          cat lighthouse-results.json

      - name: Comment PR with results
        uses: actions/github-script@v8
        with:
          script: |
            const results = JSON.parse(`${{ steps.lighthouse.outputs.lighthouse_results }}`);
            
            // Calculate performance score percentage
            const perfScore = Math.round((results.Performance || 0) * 100);
            
            // Determine performance grade
            let grade = 'üî¥';
            if (perfScore >= 90) grade = 'üü¢';
            else if (perfScore >= 50) grade = 'üü°';
            
            const comment = `## ü¶Ä Commit Crab Lighthouse Results ${grade}
            
            **Performance Score: ${perfScore}/100**
            
            ### Core Web Vitals
            | Metric | Value |
            |--------|--------|
            | **First Contentful Paint (FCP)** | ${results.FCP || 'N/A'} |
            | **Largest Contentful Paint (LCP)** | ${results.LCP || 'N/A'} |
            | **Cumulative Layout Shift (CLS)** | ${results.CLS || 'N/A'} |
            | **Total Blocking Time (TBT)** | ${results.TBT || 'N/A'} |
            | **Time to Interactive (TTI)** | ${results.TTI || 'N/A'} |
            
            ### Performance Recommendations
            ${perfScore >= 90 ? '‚úÖ Excellent performance! Keep up the good work.' :
              perfScore >= 50 ? '‚ö†Ô∏è Good performance, but there\'s room for improvement.' :
              '‚ùå Performance needs attention. Consider optimizing critical resources.'}
            
            ---
            *Triggered by: @${{ github.event.comment.user.login }}*
            *URL tested: ${{ steps.lighthouse.outputs.target_url }}*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: lighthouse-results.json
          retention-days: 30